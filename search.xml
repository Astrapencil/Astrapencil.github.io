<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/%E5%9E%92%E7%9F%B3%E6%88%90%E5%A1%94%E7%9A%84%E8%B6%B3%E8%BF%B9/hello-world/</url>
    <content><![CDATA[<h1 id="开张！"><a href="#开张！" class="headerlink" title="开张！"></a>开张！</h1><p>这篇文章的发布时间是站点正式立项的日子！</p>
<p>尽管它还在用着github的域名……</p>
<p>当然，5月16日它正式Deploy，所以建站时间就是从5月16日算起！</p>
<hr>
<p>8月11日编辑：新域名<a href="https://astralun.top">astralun.top</a>！</p>
]]></content>
      <categories>
        <category>垒石成塔的足迹</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo建站踩坑日志</title>
    <url>/%E7%9F%A5%E8%AF%86%E3%80%81%E7%BB%8F%E9%AA%8C%E4%B8%8E%E6%8A%80%E5%B7%A7/Hexo%E5%BB%BA%E7%AB%99%E8%B8%A9%E5%9D%91%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="/css/personalstyle.css">

<p>前些日子看到了本年级5班搭建的“班级主页”（现在是Cloudreve页面不知道为什么），心血来潮想自己搞自己的博客。搜了<a class="link"   href="https://hexo.io/zh-cn/docs/" >HEXO官方文档<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>、<a class="link"   href="https://zhuanlan.zhihu.com/p/547520780" >知乎的教程<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>（我觉得写得较好的一篇），却还愣是栽进不明所以的大坑里去。</p>
<p>一番折腾，再折腾，终于从大坑里边爬出来，开始填小坑了。</p>
<h2 id="网络问题"><a href="#网络问题" class="headerlink" title="网络问题"></a>网络问题</h2><h3 id="cnpm的安装"><a href="#cnpm的安装" class="headerlink" title="cnpm的安装"></a><code>cnpm</code>的安装</h3><p><code>npm</code>(Node Package Manager)是<code>node</code>包的管理工具。<br>而<code>cnpm</code>是淘宝做的一个完整的<code>npmjs.org</code>镜像（淘宝镜像），可以用它代替官方版本，国内访问速度很快。</p>
<p>只需要在<code>cmd</code>或鼠标右键再点<code>Git Bash</code>中输入</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div>
<p><code>Enter</code>即可！</p>
<p>以后所有的<code>npm</code>命令都可以换成<code>cnpm</code>命令！<br><del>妈妈再也不用担心我下不到依赖力</del></p>
<h3 id="Where-is-my-Git-Bash-Here？"><a href="#Where-is-my-Git-Bash-Here？" class="headerlink" title="Where is my Git Bash Here？"></a>Where is my <code>Git Bash Here</code>？</h3><p>Git是以前想玩AI绘图的时候装的，我平时也不编程，<code>Git Bash Here</code>感觉放在右键菜单里没什么用，于是就，，删掉了。</p>
<p>看网上说还有原因就是没有把Git装在C盘。</p>
<p>其实只要会搜索也不复杂，附教程一篇：<a class="link"   href="https://blog.csdn.net/qq_41019529/article/details/110139830" >鼠标右键没有git bash here，右键添加git bash here并增加图标<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在进行初始化的时候，会用到</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></div>
<p>因为网络问题，等了很久，文件夹里并没有出现亲爱的<code>node_modules</code>文件夹。</p>
<p>此时<del>正确</del>节省时间的方法是</p>
<ol>
<li><code>Ctrl+C</code>结束下载</li>
<li>使用万能的<code>cnpm</code>输入<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure></div>
然后文件夹里就会单独安装一个<code>node_modules</code>模块。</li>
</ol>
<p>其实这个步骤在Hexo文档里是存在的（不过人家用的是<code>npm install</code>）,是一个补全dependencies的步骤，是初始化的收尾工作，但是！当初在大陆网络环境下强行使用<code>npm</code>的我，下载的<code>node_modules</code>，是不全的。</p>
<p>其实应该使用的解决方法就是用<code>cnpm</code>重新下载。但当时我并不知道，于是就多了巨多折腾的工夫，并给24年7月的重新部署埋下了祸根。</p>
<p><em>以下是我当时的错误示范，仅供参考</em></p>
<div style="background-color: #cccccc" class=x_border>
无论如何，安装目录下`\node_modules\.store`一般都是下全了的。


<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Hexo%E5%BB%BA%E7%AB%99%E8%B8%A9%E5%9D%91%E6%97%A5%E5%BF%97/SnipasteScreenShot0.png"
                     
                ></p>
<p>翻这个<code>\.store</code>可以找到相应包的版本号，即图中划红线部分<br>然后用</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cnpm i xxxx@xx.xx.xx</span><br></pre></td></tr></table></figure></div>

<p>进行安装，“@”后面为版本号。</p>
<p>而如果遇到蓝色框中的情况，则推荐用最旧的版本<del>，反正能用就行</del>。</p>
<p>或者在<a class="link"   href="https://www.npmjs.com/" >npm官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>找到对应的包，然后找下载数最多的版本安装。</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Hexo%E5%BB%BA%E7%AB%99%E8%B8%A9%E5%9D%91%E6%97%A5%E5%BF%97/SnipasteScreenShot1.png"
                      alt="一个名为timed-out的npm包的官网页面"
                ><figcaption>一个名为timed-out的npm包的官网页面</figcaption></figure></p>
</div>

<h2 id="报错情况"><a href="#报错情况" class="headerlink" title="报错情况"></a>报错情况</h2><p><em>诀窍：认真去看ERROR后面到底跟着些什么东西+会用搜索引擎。</em></p>
<h4 id="Error-cannot-find-module-xxxx"><a href="#Error-cannot-find-module-xxxx" class="headerlink" title="Error: cannot find module&#39;xxxx&#39;"></a><code>Error: cannot find module&#39;xxxx&#39;</code></h4><p>node.js版本18.16.0，在更换主题时，首先遇到了这个报错。</p>
<p>一眼顶针，<code>node_modules</code>缺包。（其实也是网络问题埋的雷）</p>
<p>在<code>Git Bash</code>中输：</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cnpm i xxxx</span><br></pre></td></tr></table></figure></div>

<p>原则：缺啥装啥。</p>
<h4 id="require-of-ES-Module"><a href="#require-of-ES-Module" class="headerlink" title="require() of ES Module"></a><code>require() of ES Module</code></h4><p>首先上原文</p>
<details class="white" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>报错全文 </summary>
              <div class='content'>
              <div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cnpm install hexo-all-minifier</span><br><span class="line">&gt; hexo-all-minifier@0.5.7 › imagemin-mozjpeg@9.0.0 › mozjpeg@^7.0.0 postinstall D:\Hexo\node_modules\.store\mozjpeg@7.1.1\node_modules\mozjpeg</span><br><span class="line">&gt; node lib/install.js</span><br><span class="line">D:\Hexo\node_modules\.store\decompress-tarbz2@4.1.1\node_modules\decompress-tarbz2\index.js:3</span><br><span class="line">const fileType = require(&#x27;file-type&#x27;);</span><br><span class="line">                 ^</span><br><span class="line"></span><br><span class="line">Error [ERR_REQUIRE_ESM]: require() of ES Module D:\Hexo\node_modules\.store\file-type@18.4.0\node_modules\file-type\index.js from D:\Hexo\node_modules\.store\decompress-tarbz2@4.1.1\node_modules\decompress-tarbz2\index.js not supported.</span><br><span class="line">Instead change the require of D:\Hexo\node_modules\.store\file-type@18.4.0\node_modules\file-type\index.js in D:\Hexo\node_modules\.store\decompress-tarbz2@4.1.1\node_modules\decompress-tarbz2\index.js to a dynamic import() which is available in all CommonJS modules.</span><br><span class="line">    at Object.&lt;anonymous&gt; (D:\Hexo\node_modules\.store\decompress-tarbz2@4.1.1\node_modules\decompress-tarbz2\index.js:3:18)</span><br><span class="line">    at Object.&lt;anonymous&gt; (D:\Hexo\node_modules\.store\decompress@4.2.1\node_modules\decompress\index.js:5:26)</span><br><span class="line">    at Object.&lt;anonymous&gt; (D:\Hexo\node_modules\.store\bin-build@3.0.0\node_modules\bin-build\index.js:2:20)</span><br><span class="line">    at Object.&lt;anonymous&gt; (D:\Hexo\node_modules\.store\mozjpeg@7.1.1\node_modules\mozjpeg\lib\install.js:4:18) &#123;</span><br><span class="line">  code: &#x27;ERR_REQUIRE_ESM&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<p>摘取重点可以看出，报错的中心在于第八行，新加入的插件（由报错看，是<code>file-type</code>的18.4.0版本）与原软件在规范（CommonJs&#x2F;ES）的处理上起了冲突<span class="heimu">（此系本人有效使用搜索引擎得出的结果（骄傲））</span>。</p>
<p>原因在于使用<code>install</code>命令时，会自动安装最新版本（<code>@latest</code>版本）。先用<code>uninstall</code>卸载，再查看文档等，重新安装一些旧版本。</p>
<p>或者像上文所说，“在<a class="link"   href="https://www.npmjs.com/" >npm官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>找到对应的包，然后找下载数最多的版本安装。”</p>
<h4 id="非法字符"><a href="#非法字符" class="headerlink" title="非法字符"></a>非法字符</h4><details class="white" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>报错全文 </summary>
              <div class='content'>
              <div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cnpm i @iktakahiro+markdown-it-katex@4.0.1</span><br><span class="line">C:\Users\Admin\AppData\Roaming\npm\node_modules\cnpm\node_modules\npminstall\lib\npa.js:17</span><br><span class="line">    throw newError;</span><br><span class="line">    ^</span><br><span class="line"></span><br><span class="line">Error: Invalid package name &quot;@iktakahiro+markdown-it-katex&quot;: name can only contain URL-friendly characters package: root › @iktakahiro+markdown-it-katex@4.0.1</span><br><span class="line">    at npa (C:\Users\HP\AppData\Roaming\npm\node_modules\cnpm\node_modules\npminstall\lib\npa.js:15:22)</span><br><span class="line">    at exports.parsePackageName (C:\Users\HP\AppData\Roaming\npm\node_modules\cnpm\node_modules\npminstall\lib\alias.js:4:13)</span><br><span class="line">    at Object.&lt;anonymous&gt; (C:\Users\HP\AppData\Roaming\npm\node_modules\cnpm\node_modules\npminstall\bin\install.js:165:7)</span><br><span class="line">    at Module._compile (node:internal/modules/cjs/loader:1254:14)</span><br><span class="line">    at Module._extensions..js (node:internal/modules/cjs/loader:1308:10)</span><br><span class="line">    at Module.load (node:internal/modules/cjs/loader:1117:32)</span><br><span class="line">    at Module._load (node:internal/modules/cjs/loader:958:12)</span><br><span class="line">    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)</span><br><span class="line">    at node:internal/main/run_main_module:23:47 &#123;</span><br><span class="line">  code: &#x27;EINVALIDPACKAGENAME&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node.js v18.16.0</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<p>这个问题就出现在第1行，<code>@iktakahiro+markdown-it-katex@4.0.1</code>出现了不合适的<code>+</code>。第16行也写得很清楚。把包名改成<a class="link"   href="https://www.npmjs.com/" >npm官网<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>上的<code>@iktakahiro/markdown-it-katex@4.0.1</code>就好。</p>
<h2 id="Markdown问题"><a href="#Markdown问题" class="headerlink" title="Markdown问题"></a>Markdown问题</h2><br>
<div class="info_x x_border"><i class="fa-solid fa-circle-info"></i><span>&emsp;&emsp;本博客现在使用的Markdown渲染器为<code>hexo-renderer-marked</code>，<del>使用的公式渲染器为<code>hexo-fliter-mathjax</code></del>由于该插件会报错并且我难以解决，所以公式类书写换用JS方式实现。</span></div>

<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>Typora还是太好用了，兼容各种Markdown扩展语法，和它一比，原版渲染器相形见绌。</p>
<p>也不是没有考虑过换用更高级的Markdown渲染器，也参考有几篇文章（<a class="link"   href="https://bugwz.com/2019/09/17/hexo-markdown-renderer/" >Hexo的多种Markdown渲染器对比分析<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>、<a class="link"   href="https://blog.csdn.net/qq_42951560/article/details/123596899" >[Hexo]选择更高级的Markdown渲染器<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>），但是折腾来折腾去，还是换回了默认款。</p>
<ol>
<li><p>很多Markdown渲染器对于中文文本的适配十分差劲</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/Hexo%E5%BB%BA%E7%AB%99%E8%B8%A9%E5%9D%91%E6%97%A5%E5%BF%97/SnipasteScreenShot_2023-06-18_16-19-04.png"
                      alt="一个删除线在中文语境下识别渲染失败的例子"
                ><figcaption>一个删除线在中文语境下识别渲染失败的例子</figcaption></figure></p>
<p>这个问题无论换哪个渲染器都没有解决。</p>
<p>不过也不能太过苛责，毕竟中文没有那么多空格在文章里。但这确实是一个需要去解决的问题啊。</p>
</li>
<li><p>其它渲染器自带的CSS样式<strong>不！好！看！</strong></p>
<p>本来用它的配件就是为了省事，结果你跟我说我还要自己写样式，不如不用。</p>
</li>
<li><p>配件繁多，难折腾，还冗余。</p>
</li>
</ol>
<p>综上，我还是换回了默认的渲染器<code>hexo-renderer-marked</code>，转而通过自己写CSS样式表来实现提示、引用等功能。</p>
<p>所以现在就是，Markdown能解决的先用Markdown，其次用博客主题的配件，再不济上Html、CSS，最后上JS<span class="heimu" title="你知道得太多了">，缝合怪吗</span>。</p>
<h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>搭建这个博客，也是跟着文档一步一步走，跟着知乎上的教程一步步来的。但是，毕竟每个人的网络不一样，每个人的设备也不一样，遇到的问题也会是千奇百怪的。</p>
<p>以上遇到的问题，有的有些教程提到了，有的却连搜索引擎都找不到结果。实在是本人资源匮乏，真要去翻Issue可以翻个天长地久还经常无功而返，而要去Issue上提问题，那真的还不如自己找（而且最后发现大部分都是我自己的问题），所以只好一步一步，跟着经验和知乎、博客园、CSDN上零碎的只言片语慢慢来。</p>
<p>我其实并不会编程，而且因为学业的关系，前前后后花了近两个月，才把博客基本调教好。</p>
<p>不知道是不是真的没有人遇到过类似的问题，还是没有人愿意写这种文章，至少举目所及，我掉进的坑里，人迹罕至T_T</p>
<p>但回头一想，这一个个“踩坑”的过程，其实也是一次次锻炼耐心的过程。耐心是好东西，自古至今，可现代人最缺的东西之一好像就是耐心。</p>
<p>像是现在，知道“图种”是什么的人少之又少，之前在Bilibili还看到过一句话：</p>
<blockquote>
<p>以前的伸手党给个链接还会自己下；现在的伸手党真的只会伸手。</p>
</blockquote>
<p>还是希望这篇文章能够让有需要的人在自食其力的道路上，多一些成就感，少一些挫败感吧！</p>
]]></content>
      <categories>
        <category>知识、经验与技巧</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>电脑</tag>
      </tags>
  </entry>
  <entry>
    <title>数学错题本（240728）</title>
    <url>/%E7%9F%A5%E8%AF%86%E3%80%81%E7%BB%8F%E9%AA%8C%E4%B8%8E%E6%8A%80%E5%B7%A7/%E6%95%B0%E5%AD%A6%E9%94%99%E9%A2%98%E6%9C%AC%EF%BC%88240728%EF%BC%89/</url>
    <content><![CDATA[<script async src="https://cdn.bootcdn.net/ajax/libs/mathjax/3.2.2/es5/tex-chtml.js"></script>

<p>感觉过于短暂而充实的暑假里没什么动力写纸质错题本——那倒不如写上来，正好测试一下公式渲染器。</p>
<h1 id="三角函数与函数综合"><a href="#三角函数与函数综合" class="headerlink" title="三角函数与函数综合"></a>三角函数与函数综合</h1><h4 id="1-若实数-x-，-y-满足-2cos-2-x-y-1-frac-x-1-2-y-1-2-2xy-x-y-1-，则-xy-的最小值为-emsp-emsp-emsp"><a href="#1-若实数-x-，-y-满足-2cos-2-x-y-1-frac-x-1-2-y-1-2-2xy-x-y-1-，则-xy-的最小值为-emsp-emsp-emsp" class="headerlink" title="1. 若实数$x$，$y$满足$2cos^2(x+y-1)&#x3D;\frac{(x+1)^2+(y-1)^2-2xy}{x-y+1}$，则$xy$的最小值为&emsp;&emsp;&emsp;."></a>1. 若实数$x$，$y$满足$2cos^2(x+y-1)&#x3D;\frac{(x+1)^2+(y-1)^2-2xy}{x-y+1}$，则$xy$的最小值为<u>&emsp;&emsp;&emsp;</u>.</h4><hr>
<h6 id="1-从何处下手"><a href="#1-从何处下手" class="headerlink" title="1 从何处下手"></a>1 从何处下手</h6><p>考虑到右侧相对于左侧更易于解析，所以从右侧下手：</p>
<p>$$2cos^2(x+y-1)&#x3D;\frac{x^2+y^2-2xy+2x-2y+1+1}{x-y+1}$$</p>
<p>注意到存在公式：$\underline{(a+b+c)^2&#x3D;a^2+b^2+c^2+2ab+abc+2ac}$</p>
<p>∴ $2cos^2(x+y-1)&#x3D;\frac{(x-y+1)^2+1}{x-y+1}&#x3D;(x-y+1)+\frac{1}{(x-y+1)}$</p>
<hr>
<h6 id="2-如何构建左右关系"><a href="#2-如何构建左右关系" class="headerlink" title="2 如何构建左右关系"></a>2 如何构建左右关系</h6><p>又∵ $cos(x+y-1)\in[-1,1]$，$x-y+1+\frac{1}{x-y+1}\in[-\infty,-2]\cup[2,+\infty]$</p>
<p>∴ $2cos^2(x+y-1)\in[-2,2]$，</p>
<p>∴ $2cos^2(x+y-1)&#x3D;x-y+1+\frac{1}{x-y+1}&#x3D;2$.</p>
<p>又∵ $(x-y+1)+\frac{1}{(x-y+1)}$仅在$x-y+1&#x3D;\frac{1}{x-y+1}$能取值为$2$，∴ $x-y+1&#x3D;1$，$x&#x3D;y$.</p>
<p>且∵ $cos^2(x+y-1)&#x3D;\pm1$，∴ $x+y-1&#x3D;k\pi$，$x&#x3D;y&#x3D;\frac{k\pi+1}{2}$</p>
<hr>
<h6 id="3-临门一脚"><a href="#3-临门一脚" class="headerlink" title="3 临门一脚"></a>3 临门一脚</h6><p>∴ $xy&#x3D;(\frac{k\pi+1}{2})^2\geq\frac{1}{4}$，仅当$k&#x3D;0$时取等号。</p>
<p><strong>总结：函数与三角函数的关系要落到具体的未知量的关系上去。</strong></p>
<p><em>TO BE CONTINUED…</em></p>
]]></content>
      <categories>
        <category>知识、经验与技巧</category>
      </categories>
      <tags>
        <tag>记录</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>流萤与星空</title>
    <url>/%E9%97%B2%E7%AC%94%E7%A2%8E%E7%BA%B8/%E6%B5%81%E8%90%A4%E4%B8%8E%E6%98%9F%E7%A9%BA/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="星星沉默不语。" data-whm="星空依旧徒然明亮。">
  <script id="hbeData" type="hbeData" data-hmacdigest="dfbad087957ae3475bbe5b9bf25c044be9d21de8a4470e13e3b9e2584851df22">acb6765d56bed69d0bd37885c94d10d06ae184fc49c3125739fbe74b46e14ed469b2e75c16967487eb717062576c18249e846b3ffc744df46fae7bd01fc178acdd02ff683472290e7845b9a3f75c84f5d9b034f0573eee737daa192c424a720406559260d775481538dd01e1fee177f283742a4b12d644346defb27bc445107c12d1df29bbdf9420efb423bd934a162ec6d0ed024bd302b95c7a52fa394f4c29d6711bd02598ed329b5aeb95b8d3d93bff67ed9497a4cd28cd6d0096a205c31093896106d66d25b48ca1c3fe0565863cd7f58806c4917a1b5068b8984859e88c247d03945828bcac6e2705918ae8f8618c1bc8d69fc7e133aa8a5396d730ba274168674a4b25d4376c742374a33e302f7e7f75626ad57b5f61201f5b69c364972432fa8c25c351d3c99295c6c307dc571dfead25c8a3dd91a4fe51c0b187cb359242a859a1044df5de0286262ea7c49017b9c09336a26bd75a7f76868d08212ba5f75734106408eacf07701b1017cf4d9f26c5ebc44cd6a173e6906d85b4fbc98a6071e81edf8b5ff8bba12f1146246699104f36484b5e8d99fc25fd30dbc9479416b04bc3fceb2854250696a0a116b9adff7afe136b1d5984a584a8482775f9d580683e08142e7cf1d1fe35ce9e4da4fe6773baff2863a487548182ef8978838f60dd259b646450e240e926defffd10fbec1ea2a57cbaa90be00ad4c87d5363a619f6995d4185da40cbe0927362bc29d96899053fddbc71d6e95e5521f0b0c2a3310d03f98d10c0644c314864918ce44f7584d97475b970508efd78b27142462e06a2448e44070492e97efda237f02a4ceaa7ca6300ea0dffcadd0169c645e0d7b6595e7a65764e318cf6e7508ffd50ae05bf535cbab4540ee2bba2520c34c34e40f7fb0227259832ad9c868720db9cf3403e3c1d04ced4eabd81002e0b325e31bfa962faaeef7fee61e7d2017988266d02d2ed3b40f6bacb9b2905eb41222f4ce27cbd73ecf774b70256ce0132d6b3148a4dbd6bb726253b325058642c7cb6b3dfabc8beb051e6f9d21870ed0b75385ad667c12e7c11ac32760cc06c7fb01fc56ca215ea9f2da754a3ba7a7f2b507126f323a3b05e5e0cca9ac1bc038faadd35860f38d71fc5d46c7cdf21bd1566e1f76f244052e23728fff7c4db4c2b63ee99325585cf5a7759ccf67d22a9ab2abd6443e52fc0219e1281436a4c329e048d518ff7ff5c4a19f5fa8cbe1958ab8f8ce30305817a78432174fb4e2adc49ab46b411d8d52bc67a2b2ad14659ffe521ebb063af19b2a6ab58023a2a6016593fcac5e5fd93c6eef09629c4ef880a7d76bbe9d92f5b68c86f795c5f58a84da3ab62162a0887f3d3f8b740e3d58b2b5991156cd2fdea2d6644b709390f59d1d5dfee</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">星亦有其五言之名。</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>闲笔碎纸</category>
      </categories>
      <tags>
        <tag>星空</tag>
        <tag>尘埃</tag>
        <tag>灵感</tag>
      </tags>
  </entry>
  <entry>
    <title>星野爱——爱与谎言的绝症</title>
    <url>/%E4%BA%8E%E6%96%AF%E6%9C%89%E6%84%9F/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E7%88%B1%E4%B8%8E%E8%B0%8E%E8%A8%80%E7%9A%84%E7%BB%9D%E7%97%87/</url>
    <content><![CDATA[
  <div class="note-large red">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <p>剧透警告</p>

    </div>
    <div class="notel-content">
      <p>本文章中含有番剧《我推的孩子 第一季》第一话的内容，请谨慎浏览！</p>

    </div>
  </div>

<p>1小时22分钟，吃了一记正劈和一记回马枪。第一集类似于前传吧，看完……只有压抑。</p>
<p>星野爱从小在孤儿院长大，从各个方面都写出她是一个极度缺爱的孩子。内心空虚，想去爱，想得到情感寄托，但是却并没有爱的能力。有点儿像太宰治吧，无法接纳，无法感受，但又并没有那么极端，因为她依然在尽力尝试。</p>
<p>然而偶像职业其实并不适合她，就算她确实有一个好的面容，因为她不懂得真正去掌握“爱”的情感，而是曲解了它的含义：“谎言就是爱”。或许在特殊语境下，或许对她个人而言，此句是成立的。但是，“爱”和“爱”，真的是同一种东西吗？</p>
<p>太宰治在风花雪月中获得他的充实与满足，那终究不是爱，填不满他的内心，他依旧是本我的奴隶；星野爱其实也一样。但这空虚并非源于她自己，而她确实在努力，去说爱，去卖力，去迎合。</p>
<p>而互联网是个无情的东西，信息与情感在互联网上都是廉价的。从偶像这个职业来说，爱的反馈其实寥寥。这既是互联网的内禀，也是商业的绑架。这就好像又回到了起点：她希望去爱别人，但是没人“爱”她。</p>
<p>之前有听过一个新闻：有一个女孩儿不顾家里人反对，多次打胎之后仍然坚持要生下一个孩子。我觉得这其实是情感缺失的一种极端体现。情感交流是双向的。一个人不能在他的原生家庭中找到感情依靠，就必然要去其他的人那里寻找感情寄托。</p>
<p>但谎言确实是一个人可以说的。自己织就的谎言一旦包裹了自己，便再也分不出到底是什么谎言了，如同自我麻醉，但更可悲的是这谎言的茧是织在一个最大的谎言上的：谎言会成真。</p>
<p>但谎言毕竟是权宜，是虚伪，真与假再怎么辩证也是不可能完全统一的。无力感其实贯穿始终。</p>
<p>抛开星野爱的原生家庭和最后的凶手不说，其实并没有哪个人是有错的。挖走星野爱的社长只是在工作，社长的妻子也有自己的梦想，只是……</p>
<p>“欲戴王冠，必承其重。”</p>
<p>星野爱是一个有缺陷的个体，她会笑，会唱，会跳，乐观而有活力；她并不是贪得无厌，也并不是冷漠无情，只是她的路与她的心站在了对立的面上。她希望能够汲取爱，但是在这条路上，谎言又成了良药，成了必须，一个矛盾的个体，悲剧就是注定的：没有人真正想要她死，可她就是死了。</p>
<p>死亡，不是谎言。 </p>
]]></content>
      <categories>
        <category>于斯有感</category>
      </categories>
      <tags>
        <tag>推しの子</tag>
        <tag>番剧</tag>
        <tag>有感而发</tag>
        <tag>星野 アイ</tag>
      </tags>
  </entry>
</search>
